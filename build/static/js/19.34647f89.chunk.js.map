{"version":3,"file":"static/js/19.34647f89.chunk.js","mappings":"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","sources":["webpack://vulpes-storage/./src/components/PopUp/PopUp.module.css?1d5e","components/PopUp/PopUp.js","webpack://vulpes-storage/./src/components/Scanner/ProductByBarcode/ProductByBarcode.module.css?7a4d","components/Scanner/ProductByBarcode/ProductByBarcode.js","pages/Scanner.js","redux/products/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalCloseButton\":\"PopUp_modalCloseButton__dgT-x\",\"menuIcon\":\"PopUp_menuIcon__6pYtP\"};","import svgIcons from '../../images/icons.svg';\r\nimport Modal from 'react-modal';\r\nimport css from './PopUp.module.css';\r\n\r\nexport const PopUp = ({ isOpen, close, body }) => {\r\n\r\n    const customStyles = {\r\n        overlay: { \r\n            backgroundColor: 'rgba(9, 9, 9, 0.75)',\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n        content: {\r\n            position: 'relative',\r\n            top: 'auto',\r\n            left: 'auto',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            minWidth: '300px',\r\n            maxWidth: '80%',\r\n            width: 'auto',\r\n            maxHeight: '80%',\r\n            padding: '50px 20px',\r\n            borderRadius: '12px',\r\n            border: '2px solid black',\r\n            backgroundColor: 'FFF',\r\n            transition: 'top 0.3s ease-in-out',\r\n        },\r\n      };\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={isOpen}\r\n            onRequestClose={close}\r\n            style={customStyles}\r\n            ariaHideApp={false}\r\n        >\r\n            <button className={css.modalCloseButton} type=\"button\" onClick={close}>\r\n                <svg className={css.menuIcon}>\r\n                    <use href={`${svgIcons}#icon-close-circle`}></use>\r\n                </svg>\r\n            </button>\r\n            {body}\r\n        </Modal>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ProductByBarcode_container__l1ll2\",\"videoArea\":\"ProductByBarcode_videoArea__IB-yi\",\"hide\":\"ProductByBarcode_hide__Uz2Zo\",\"modalArea\":\"ProductByBarcode_modalArea__zvuyE\",\"modalImage\":\"ProductByBarcode_modalImage__UsrL7\",\"button\":\"ProductByBarcode_button__yJUcD\"};","import { useEffect, useRef, useState } from 'react';\r\nimport css from './ProductByBarcode.module.css';\r\nimport { BrowserMultiFormatReader } from '@zxing/library';\r\nimport { getProductByBarcode } from '../../../redux/products/operations';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectActiveProduct } from '../../../redux/products/selectors';\r\n// import { clearActiveProduct } from '../../../redux/products/slice';\r\nimport { PopUp } from 'components/PopUp/PopUp';\r\n\r\nexport const ProductByBarcode = () => {\r\n  const dispatch = useDispatch();\r\n  const activeItem = useSelector(selectActiveProduct);\r\n  const videoRef = useRef(null);\r\n  const selectRef = useRef(null);\r\n  const [devices, setDevices] = useState([]);\r\n  const [selectedDeviceId, setSelectedDeviceId] = useState('');\r\n  const [result, setResult] = useState(null);\r\n  const [lastResult, setLastResult] = useState('');\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [activeScanner, setActiveScanner] = useState(false);\r\n\r\n  const codeReader = useRef(new BrowserMultiFormatReader());\r\n\r\n  useEffect(() => {\r\n    const reader = codeReader.current;\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true })\r\n      .then(() => {\r\n        return reader.listVideoInputDevices();\r\n      })\r\n      .then(videoInputDevices => {\r\n        setDevices(videoInputDevices);\r\n        if (videoInputDevices.length > 0) {\r\n          setSelectedDeviceId(videoInputDevices[0].deviceId);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error('Ошибка доступа к камере:', err);\r\n      });\r\n\r\n    return () => {\r\n      reader.reset();\r\n    };\r\n  }, []);\r\n\r\n  const startScan = () => {\r\n    setActiveScanner(true);\r\n    if (!selectedDeviceId) return;\r\n\r\n    codeReader.current.decodeFromVideoDevice(\r\n      selectedDeviceId,\r\n      videoRef.current,\r\n      async (result, err) => {\r\n        if (result) {\r\n          try {\r\n            setLastResult(result.text);\r\n            dispatch(getProductByBarcode(result.text));\r\n\r\n            // const res = await fetch(`/api/products/${result.text}`);\r\n            // const contentType = res.headers.get('content-type');\r\n\r\n            // if (contentType && contentType.includes('application/json')) {\r\n            //   const data = await res.json();\r\n\r\n            //   if (res.status === 200) {\r\n            //     setResult({\r\n            //       name: data.name,\r\n            //       article: data.article,\r\n            //       barcode: data.barcode,\r\n            //     });\r\n            //   } else {\r\n            //     setResult({ error: data.message });\r\n            //   }\r\n            // } else {\r\n            //   const text = await res.text();\r\n            //   console.error('Сервер вернул не JSON:', text);\r\n            // }\r\n          } catch (error) {\r\n            console.error(error);\r\n            setResult({ error: 'Ошибка запроса к серверу' });\r\n          }\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const stopScan = () => {\r\n    setActiveScanner(false);\r\n    codeReader.current.reset();\r\n    setResult(null);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (activeItem && activeItem.article) {\r\n      stopScan();\r\n      setIsModalOpen(true);\r\n    }\r\n    if (activeItem === null) {\r\n      setIsModalOpen(true);\r\n      stopScan();\r\n    }\r\n  }, [activeItem, result]);\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <div className={css.scanBlock}>\r\n        <video ref={videoRef} className={activeScanner ? css.videoArea : css.hide} />\r\n      </div>\r\n\r\n      <div className={css.buttonsBlock}>\r\n        <button className={css.button} onClick={startScan}>\r\n          Start\r\n        </button>\r\n        <button className={css.button} onClick={stopScan}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n\r\n      <div className={css.scanBlock}>\r\n        <label htmlFor=\"sourceSelect\">Change video source:</label>\r\n        <select\r\n          ref={selectRef}\r\n          id=\"sourceSelect\"\r\n          value={selectedDeviceId}\r\n          onChange={e => setSelectedDeviceId(e.target.value)}\r\n        >\r\n          {devices.map(device => (\r\n            <option key={device.deviceId} value={device.deviceId}>\r\n              {device.label || `Camera ${device.deviceId}`}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <PopUp\r\n        isOpen={isModalOpen}\r\n        close={closeModal}\r\n        body={\r\n          activeItem && activeItem.article ? (\r\n            <div className={css.modalArea}>\r\n              {Array.isArray(activeItem.images) &&\r\n              activeItem.images.length > 0 ? (\r\n                <img\r\n                  className={css.modalImage}\r\n                  alt=\"scanned product\"\r\n                  src={activeItem.images[0]}\r\n                />\r\n              ) : (\r\n                <p>No image</p>\r\n              )}\r\n              <p>{`${activeItem.name?.UA || 'Без названия'} (${\r\n                activeItem.article\r\n              })`}</p>\r\n              <p>\r\n                {activeItem.price?.UAH\r\n                  ? `${activeItem.price.UAH} грн.`\r\n                  : 'Цена не указана'}\r\n              </p>\r\n            </div>\r\n          ) : activeItem === null ? (\r\n            <div>\r\n              <p>Товар не найден!</p>\r\n              <p>Штрихкод: {lastResult}</p>\r\n            </div>\r\n          ) : null\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { ProductByBarcode } from '../components/Scanner/ProductByBarcode/ProductByBarcode';\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\r\n// import { useSelector } from 'react-redux';\r\n// import { selectUser } from '../redux/auth/selectors';\r\n\r\n  \r\n  export default function Home() {\r\n\r\n    // const user = useSelector(selectUser);\r\n\r\n    return (\r\n    <HelmetProvider>\r\n      <div>\r\n        <Helmet>\r\n          <title>Scanner</title>\r\n        </Helmet>\r\n        <ProductByBarcode />\r\n      </div>\r\n    </HelmetProvider>\r\n    );\r\n  }","export const selectAllProducts = state => state.products.items;\r\nexport const selectActiveProduct = state => state.products.activeItem;"],"names":["PopUp","isOpen","close","body","onRequestClose","style","overlay","backgroundColor","position","top","left","right","bottom","display","justifyContent","alignItems","content","minWidth","maxWidth","width","maxHeight","padding","borderRadius","border","transition","ariaHideApp","className","css","type","onClick","href","svgIcons","ProductByBarcode","dispatch","useDispatch","activeItem","useSelector","selectActiveProduct","videoRef","useRef","selectRef","useState","devices","setDevices","selectedDeviceId","setSelectedDeviceId","result","setResult","lastResult","setLastResult","isModalOpen","setIsModalOpen","activeScanner","setActiveScanner","codeReader","BrowserMultiFormatReader","useEffect","reader","current","navigator","mediaDevices","getUserMedia","video","then","listVideoInputDevices","videoInputDevices","length","deviceId","catch","err","console","error","reset","stopScan","article","ref","decodeFromVideoDevice","text","getProductByBarcode","htmlFor","id","value","onChange","e","target","map","device","label","Array","isArray","images","alt","src","name","UA","price","UAH","Home","selectAllProducts","state","products","items"],"sourceRoot":""}