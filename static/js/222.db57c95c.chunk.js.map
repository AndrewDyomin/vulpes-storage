{"version":3,"file":"static/js/222.db57c95c.chunk.js","mappings":"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","sources":["webpack://vulpes-storage/./src/components/BarcodeScanner/BarcodeScanner.module.css?8344","components/BarcodeScanner/BarcodeScanner.js","webpack://vulpes-storage/./src/components/PopUp/PopUp.module.css?1d5e","components/PopUp/PopUp.js","webpack://vulpes-storage/./src/components/InventoryCheckList/InventoryCheckList.module.css?ef9c","components/InventoryCheckList/InventoryCheckList.js","pages/InventoryCheck.js","redux/inventory/selectors.js","redux/products/selectors.js","../node_modules/react-spinners/esm/helpers/unitConverter.js","../node_modules/react-spinners/esm/helpers/animation.js","../node_modules/react-spinners/esm/ClockLoader.js","../node_modules/@mui/icons-material/esm/AddCircleOutline.js","../node_modules/@mui/icons-material/esm/CheckCircleOutline.js","../node_modules/@mui/icons-material/esm/HighlightOff.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"BarcodeScanner_container__zdOxt\",\"scanBlock\":\"BarcodeScanner_scanBlock__MR5A0\",\"videoArea\":\"BarcodeScanner_videoArea__AA2r4\",\"hide\":\"BarcodeScanner_hide__qqbBN\",\"modalArea\":\"BarcodeScanner_modalArea__9PFQN\",\"modalImage\":\"BarcodeScanner_modalImage__0uUA6\",\"button\":\"BarcodeScanner_button__kNses\"};","import { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport css from './BarcodeScanner.module.css';\nimport { BrowserMultiFormatReader } from '@zxing/library';\nimport { getProductByBarcode } from '../../redux/products/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectActiveProduct } from '../../redux/products/selectors';\nimport { useTranslation } from 'react-i18next';\n\nexport const BarcodeScanner = forwardRef(({ setLastResult }, ref) => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch();\n  const activeItem = useSelector(selectActiveProduct);\n  const videoRef = useRef(null);\n  const selectRef = useRef(null);\n  const [devices, setDevices] = useState([]);\n  const [selectedDeviceId, setSelectedDeviceId] = useState('');\n  const [result, setResult] = useState(null);\n  const [activeScanner, setActiveScanner] = useState(false);\n\n  const codeReader = useRef(new BrowserMultiFormatReader());\n\n  useEffect(() => {\n    const reader = codeReader.current;\n\n    navigator.mediaDevices\n      .getUserMedia({ video: true })\n      .then(() => {\n        return reader.listVideoInputDevices();\n      })\n      .then(videoInputDevices => {\n        setDevices(videoInputDevices);\n        if (videoInputDevices.length > 0) {\n          setSelectedDeviceId(videoInputDevices[0].deviceId);\n        }\n      })\n      .catch(err => {\n        console.error('Ошибка доступа к камере:', err);\n      });\n\n    return () => {\n      reader.reset();\n    };\n  }, []);\n\n  useImperativeHandle(ref, () => ({\n    startScan,\n    stopScan,\n  }));\n\n  const startScan = () => {\n    setActiveScanner(true);\n    if (!selectedDeviceId) return;\n\n    codeReader.current.decodeFromVideoDevice(\n      selectedDeviceId,\n      videoRef.current,\n      async (result, err) => {\n        if (result) {\n          try {\n\n            if (result?.text[0] !== 'H') {\n              setLastResult(result.text);\n              dispatch(getProductByBarcode(result.text));\n            }\n          } catch (error) {\n            console.error(error);\n            setResult({ error: 'Ошибка запроса к серверу' });\n          }\n        }\n      }\n    );\n  };\n\n  const stopScan = () => {\n    setActiveScanner(false);\n    codeReader.current.reset();\n    setResult(null);\n  };\n\n  useEffect(() => {\n    if (activeItem && activeItem.article) {\n      stopScan();\n    }\n    if (activeItem === null) {\n      stopScan();\n    }\n  }, [activeItem, result]);\n\n  return (\n    <div className={css.container}>\n      <div className={css.scanBlock}>\n        <video\n          ref={videoRef}\n          className={activeScanner ? css.videoArea : css.hide}\n        />\n      </div>\n\n      <div className={css.buttonsBlock}>\n        <button className={css.button} onClick={startScan}>\n          {t('start')}\n        </button>\n        <button className={css.button} onClick={stopScan}>\n          {t('reset')}\n        </button>\n      </div>\n\n      <div className={css.scanBlock}>\n        <label htmlFor=\"sourceSelect\">{t('change video source')}:</label>\n        <select\n          ref={selectRef}\n          id=\"sourceSelect\"\n          value={selectedDeviceId}\n          onChange={e => setSelectedDeviceId(e.target.value)}\n        >\n          {devices.map(device => (\n            <option key={device.deviceId} value={device.deviceId}>\n              {device.label || `Camera ${device.deviceId}`}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n})","// extracted by mini-css-extract-plugin\nexport default {\"modalCloseButton\":\"PopUp_modalCloseButton__m06-1\",\"menuIcon\":\"PopUp_menuIcon__5-11v\"};","import svgIcons from '../../images/icons.svg';\nimport Modal from 'react-modal';\nimport css from './PopUp.module.css';\n\nexport const PopUp = ({ isOpen, close, body }) => {\n\n    const customStyles = {\n        overlay: { \n            backgroundColor: 'rgba(9, 9, 9, 0.75)',\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        content: {\n            position: 'relative',\n            top: 'auto',\n            left: 'auto',\n            right: 'auto',\n            bottom: 'auto',\n            minWidth: '300px',\n            maxWidth: '80%',\n            width: 'auto',\n            maxHeight: '80%',\n            padding: '50px 20px',\n            borderRadius: '12px',\n            border: '2px solid black',\n            backgroundColor: 'FFF',\n            transition: 'top 0.3s ease-in-out',\n        },\n      };\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={close}\n            style={customStyles}\n            ariaHideApp={false}\n        >\n            <button className={css.modalCloseButton} type=\"button\" onClick={close}>\n                <svg className={css.menuIcon}>\n                    <use href={`${svgIcons}#icon-close-circle`}></use>\n                </svg>\n            </button>\n            {body}\n        </Modal>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"listWrapper\":\"InventoryCheckList_listWrapper__ZmVhv\",\"controlArea\":\"InventoryCheckList_controlArea__qzRVJ\",\"modeButtons\":\"InventoryCheckList_modeButtons__S5Uyv\",\"addButton\":\"InventoryCheckList_addButton__GF6NK\",\"selectButton\":\"InventoryCheckList_selectButton__TSjrs\",\"activeSelect\":\"InventoryCheckList_activeSelect__NlVrU\",\"addArtBtn\":\"InventoryCheckList_addArtBtn__jDfjx\",\"modalArea\":\"InventoryCheckList_modalArea__P1CSU\",\"modalImage\":\"InventoryCheckList_modalImage__eAl2A\",\"button\":\"InventoryCheckList_button__apVqB\",\"countArea\":\"InventoryCheckList_countArea__B0ih7\",\"countInput\":\"InventoryCheckList_countInput__dfopf\",\"countAddBtn\":\"InventoryCheckList_countAddBtn__TlZrB\",\"addListArea\":\"InventoryCheckList_addListArea__p0QVr\",\"list\":\"InventoryCheckList_list__J6D9u\",\"listItem\":\"InventoryCheckList_listItem__UnQTL\",\"selectedItem\":\"InventoryCheckList_selectedItem__D27GP\",\"link\":\"InventoryCheckList_link__MUYxS\",\"count\":\"InventoryCheckList_count__So13G\",\"notFoundArea\":\"InventoryCheckList_notFoundArea__XNR+b\",\"combineButton\":\"InventoryCheckList_combineButton__kZMfo\"};","import css from './InventoryCheckList.module.css';\nimport { ClockLoader } from 'react-spinners';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport { useEffect, useState, useRef } from 'react';\nimport { BarcodeScanner } from '../BarcodeScanner/BarcodeScanner';\nimport { selectActiveProduct } from '../../redux/products/selectors';\nimport { selectAllInventoryChecks, selectLoading } from '../../redux/inventory/selectors';\nimport { clearActiveProduct } from '../../redux/products/slice';\nimport { addInventoryCheck, getAllInventoryChecks } from '../../redux/inventory/operations';\nimport { selectUser } from '../../redux/auth/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PopUp } from '../PopUp/PopUp';\nimport toast from 'react-hot-toast';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport axios from 'axios';\n\nexport const InventoryCheckList = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const activeItem = useSelector(selectActiveProduct);\n  const user = useSelector(selectUser);\n  const isLoading = useSelector(selectLoading);\n  const allChecks = useSelector(selectAllInventoryChecks);\n  const scannerRef = useRef();\n  const [addMode, setAddMode] = useState(false);\n  const [selectMode, setSelectMode] = useState(false);\n  const [selected, setSelected] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [lastResult, setLastResult] = useState('');\n  const [count, setCount] = useState();\n  const [addItemsList, setAddItemsList] = useState([]);\n  const [article, setArticle] = useState();\n  const [addArticleModal, setAddArticleModal] = useState();\n\n  const changeMode = (mode) => {\n    if (mode === 'add') {\n      addMode ? setAddMode(false) : setAddMode(true);\n    }\n    if (mode === 'select') {\n      selectMode ? setSelectMode(false) : setSelectMode(true);\n      setSelected([])\n    }\n  };\n\n  const selectItem = (index) => {\n    if (selected.includes(allChecks[index]._id)) {\n      setSelected(prev => [...prev.filter(id => id !== allChecks[index]._id)])\n    }\n    if (!selected.includes(allChecks[index]._id)) {\n      setSelected(prev => [...prev, allChecks[index]._id])\n    }\n  }\n\n  const combine = async() => {\n    await axios.post('/inventory-check/combine', { array: selected });\n    changeMode('select');\n    dispatch(getAllInventoryChecks());\n  }\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setAddArticleModal(false);\n  };\n\n  const addItemToList = () => {\n    setAddItemsList(prevState => [\n      ...prevState,\n      { article: !article ? activeItem.article : article, count },\n    ]);\n    closeModal();\n    setArticle();\n    setCount();\n    dispatch(clearActiveProduct());\n    scannerRef.current?.startScan();\n  };\n\n  const listDate = () => {\n    const now = new Date();\n    const today = now.getDate() < 10 ? '0' + now.getDate() : now.getDate();\n    const month =\n      now.getMonth() < 9 ? '0' + (now.getMonth() + 1) : now.getMonth() + 1;\n    const year = now.getFullYear();\n    const baseName = `${today}.${month}.${year}`;\n\n    let suffix = 0;\n    let finalName = baseName;\n\n    const existingNames = allChecks.map(check => check.name);\n\n    while (existingNames.includes(finalName)) {\n      suffix += 1;\n      finalName = `${baseName} (${suffix})`;\n    }\n\n    return finalName;\n  };\n\n  const saveList = () => {\n    const check = { name: listDate(), items: addItemsList };\n    try {\n      dispatch(addInventoryCheck(check));\n      setAddMode(false);\n      setAddItemsList([]);\n    } catch (err) {\n      toast.error(err);\n    }\n  };\n\n  const calculatePcs = arr => {\n    let i = 0;\n    for (const item of arr) {\n      i += Number(item.count);\n    }\n    return i;\n  };\n\n  useEffect(() => {\n    if (lastResult === '') return;\n\n    if (activeItem && activeItem.article) {\n      setIsModalOpen(true);\n    }\n    if (activeItem === null) {\n      setIsModalOpen(true);\n    }\n  }, [activeItem, lastResult]);\n\n  useEffect(() => {\n    if (!addMode) {\n      dispatch(getAllInventoryChecks());\n    }\n  }, [addMode, dispatch]);\n\n  return (\n    <>\n      {!addMode && (\n        <>\n          <div className={css.modeButtons}>\n            <button className={css.addButton} onClick={() => changeMode('add')}>\n              <AddCircleOutlineIcon fill=\"transparent\" fontSize=\"large\" />\n            </button>\n            {user.role === 'owner' && <button className={`${css.addButton} ${css.selectButton} ${selectMode && css.activeSelect}`} onClick={() => changeMode('select')}>\n              <CheckCircleOutlineIcon fill=\"transparent\" fontSize=\"large\" />\n            </button>}\n          </div>\n          <div>\n            {isLoading && \n              <div className={css.listWrapper}>\n                <ClockLoader color=\"#c04545\" />\n              </div>}\n            {!isLoading && allChecks && (\n              <div className={css.listWrapper}>\n              <ul className={css.list}>\n                {allChecks.map((check, index) => (\n                  <li key={index} className={`${css.listItem} ${selected.includes(check._id) && css.selectedItem}`}>\n                    {!selectMode ? \n                    <Link\n                      className={css.link}\n                      to={`/inventory-check/${check._id}`}\n                    >\n                      <p>{check.name}</p>\n                      <p className={css.count}>\n                        {calculatePcs(check.items)}{t('pcs')}.\n                      </p>\n                    </Link> :\n                    <div\n                      className={css.link}\n                      onClick={() => selectItem(index)}\n                    >\n                      <p>{check.name}</p>\n                      <p className={css.count}>\n                        {calculatePcs(check.items)}{t('pcs')}.\n                      </p>\n                    </div>\n                    }\n                  </li>\n                ))}\n              </ul>\n              {(user.role === 'owner' && selectMode && selected?.length > 1) && (<div>\n                <button onClick={combine} className={`${css.button} ${css.combineButton}`}>{t('combine')}</button>\n              </div>)}\n              </div>\n            )}\n          </div>\n        </>\n      )}\n      {addMode && (\n        <>\n          <button\n            className={`${css.addButton} ${css.closeButton}`}\n            onClick={() => changeMode('add')}\n          >\n            <HighlightOffIcon fill=\"transparent\" fontSize=\"large\" />\n          </button>\n          <div className={css.controlArea}>\n            <BarcodeScanner setLastResult={setLastResult} ref={scannerRef} />\n            <button\n              className={`${css.addButton} ${css.addArtBtn}`}\n              onClick={() => setAddArticleModal(true)}\n            >\n              <AddCircleOutlineIcon fill=\"transparent\" fontSize=\"large\" />\n            </button>\n          </div>\n          {activeItem && activeItem.article && (\n            <button className={css.button} onClick={() => setIsModalOpen(true)}>\n              {t('last scan')}\n            </button>\n          )}\n          {addItemsList?.length > 0 && (\n            <div className={css.addListArea}>\n              <p>{listDate()}</p>\n              <ul className={css.list}>\n                {addItemsList.map((item, index) => (\n                  <li key={index} className={css.listItem}>\n                    <p>{t('article')}: {item.article}</p>\n                    <p className={css.count}>{t('count')}: {item.count}{t('pcs')}.</p>\n                  </li>\n                ))}\n              </ul>\n              <button className={css.button} onClick={saveList}>\n                {t('save')}\n              </button>\n            </div>\n          )}\n          <PopUp\n            isOpen={isModalOpen}\n            close={closeModal}\n            body={\n              activeItem && activeItem.article ? (\n                <div className={css.modalArea}>\n                  {Array.isArray(activeItem.images) &&\n                  activeItem.images.length > 0 ? (\n                    <img\n                      className={css.modalImage}\n                      alt=\"scanned product\"\n                      src={activeItem.images[0]}\n                    />\n                  ) : (\n                    <p>No image</p>\n                  )}\n                  <p>{`${activeItem.name?.UA || t('no name')} (${\n                    activeItem.article\n                  })`}</p>\n                  <p>\n                    {activeItem.price?.UAH\n                      ? `${activeItem.price.UAH} грн.`\n                      : 'Цена не указана'}\n                  </p>\n                  <div className={css.countArea}>\n                    <input\n                      placeholder={t('count')}\n                      onChange={e => setCount(e.target.value)}\n                      defaultValue={count}\n                      className={css.countInput}\n                    />\n                    <button className={css.countAddBtn} onClick={addItemToList}>\n                      {t('add')}\n                    </button>\n                  </div>\n                </div>\n              ) : activeItem === null ? (\n                <div>\n                  <p>{t('product not found')}!</p>\n                  <p>{('barcode')}: {lastResult}</p>\n                  <div className={css.countArea}>\n                    <input\n                      placeholder={t('article')}\n                      onChange={e => setArticle(e.target.value)}\n                      defaultValue={article}\n                      className={css.countInput}\n                    />\n                    <input\n                      placeholder={t('count')}\n                      onChange={e => setCount(e.target.value)}\n                      defaultValue={count}\n                      className={css.countInput}\n                    />\n                    <button className={css.countAddBtn} onClick={addItemToList}>\n                      {t('add')}\n                    </button>\n                  </div>\n                </div>\n              ) : null\n            }\n          />\n          <PopUp\n            isOpen={addArticleModal}\n            close={closeModal}\n            body={\n              <div className={`${css.countArea} ${css.notFoundArea}`}>\n                <input\n                  placeholder={t('article')}\n                  onChange={e => setArticle(e.target.value)}\n                  className={css.countInput}\n                />\n                <input\n                  placeholder={t('count')}\n                  onChange={e => setCount(e.target.value)}\n                  type='number'\n                  className={css.countInput}\n                />\n                <button className={css.countAddBtn} onClick={addItemToList}>{t('add')}</button>\n              </div>\n            }\n          />\n        </>\n      )}\n    </>\n  );\n};\n","import { InventoryCheckList } from '../components/InventoryCheckList/InventoryCheckList';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n// import { useSelector } from 'react-redux';\n// import { selectUser } from '../redux/auth/selectors';\n\n  \n  export default function InventoryCheck() {\n\n    // const user = useSelector(selectUser);\n\n    return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Inventory check</title>\n        </Helmet>\n        <InventoryCheckList />\n      </div>\n    </HelmetProvider>\n    );\n  }","export const selectAllInventoryChecks = state => state.inventory.items;\nexport const selectLoading = state => state.inventory.isLoading;","export const selectAllProducts = state => state.products.items;\nexport const selectActiveProduct = state => state.products.activeItem;","var cssUnit = {\n    cm: true,\n    mm: true,\n    in: true,\n    px: true,\n    pt: true,\n    pc: true,\n    em: true,\n    ex: true,\n    ch: true,\n    rem: true,\n    vw: true,\n    vh: true,\n    vmin: true,\n    vmax: true,\n    \"%\": true,\n};\n/**\n * If size is a number, append px to the value as default unit.\n * If size is a string, validate against list of valid units.\n * If unit is valid, return size as is.\n * If unit is invalid, console warn issue, replace with px as the unit.\n *\n * @param {(number | string)} size\n * @return {LengthObject} LengthObject\n */\nexport function parseLengthAndUnit(size) {\n    if (typeof size === \"number\") {\n        return {\n            value: size,\n            unit: \"px\",\n        };\n    }\n    var value;\n    var valueString = (size.match(/^[0-9.]*/) || \"\").toString();\n    if (valueString.includes(\".\")) {\n        value = parseFloat(valueString);\n    }\n    else {\n        value = parseInt(valueString, 10);\n    }\n    var unit = (size.match(/[^0-9]*$/) || \"\").toString();\n    if (cssUnit[unit]) {\n        return {\n            value: value,\n            unit: unit,\n        };\n    }\n    console.warn(\"React Spinners: \".concat(size, \" is not a valid css value. Defaulting to \").concat(value, \"px.\"));\n    return {\n        value: value,\n        unit: \"px\",\n    };\n}\n/**\n * Take value as an input and return valid css value\n *\n * @param {(number | string)} value\n * @return {string} valid css value\n */\nexport function cssValue(value) {\n    var lengthWithunit = parseLengthAndUnit(value);\n    return \"\".concat(lengthWithunit.value).concat(lengthWithunit.unit);\n}\n","export var createAnimation = function (loaderName, frames, suffix) {\n    var animationName = \"react-spinners-\".concat(loaderName, \"-\").concat(suffix);\n    if (typeof window == \"undefined\" || !window.document) {\n        return animationName;\n    }\n    var styleEl = document.createElement(\"style\");\n    document.head.appendChild(styleEl);\n    var styleSheet = styleEl.sheet;\n    var keyFrames = \"\\n    @keyframes \".concat(animationName, \" {\\n      \").concat(frames, \"\\n    }\\n  \");\n    if (styleSheet) {\n        styleSheet.insertRule(keyFrames, 0);\n    }\n    return animationName;\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { parseLengthAndUnit } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar rotate = createAnimation(\"ClockLoader\", \"100% { transform: rotate(360deg) }\", \"rotate\");\nfunction ClockLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 50 : _f, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\"]);\n    var _g = parseLengthAndUnit(size), value = _g.value, unit = _g.unit;\n    var wrapper = __assign({ display: \"inherit\", position: \"relative\", width: \"\".concat(value).concat(unit), height: \"\".concat(value).concat(unit), backgroundColor: \"transparent\", boxShadow: \"inset 0px 0px 0px 2px \".concat(color), borderRadius: \"50%\" }, cssOverride);\n    var minute = {\n        position: \"absolute\",\n        backgroundColor: color,\n        width: \"\".concat(value / 3, \"px\"),\n        height: \"2px\",\n        top: \"\".concat(value / 2 - 1, \"px\"),\n        left: \"\".concat(value / 2 - 1, \"px\"),\n        transformOrigin: \"1px 1px\",\n        animation: \"\".concat(rotate, \" \").concat(8 / speedMultiplier, \"s linear infinite\"),\n    };\n    var hour = {\n        position: \"absolute\",\n        backgroundColor: color,\n        width: \"\".concat(value / 2.4, \"px\"),\n        height: \"2px\",\n        top: \"\".concat(value / 2 - 1, \"px\"),\n        left: \"\".concat(value / 2 - 1, \"px\"),\n        transformOrigin: \"1px 1px\",\n        animation: \"\".concat(rotate, \" \").concat(2 / speedMultiplier, \"s linear infinite\"),\n    };\n    if (!loading) {\n        return null;\n    }\n    return (React.createElement(\"span\", __assign({ style: wrapper }, additionalprops),\n        React.createElement(\"span\", { style: hour }),\n        React.createElement(\"span\", { style: minute })));\n}\nexport default ClockLoader;\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8\"\n}), 'AddCircleOutline');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 7.58 10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}), 'CheckCircleOutline');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M14.59 8 12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8\"\n}), 'HighlightOff');"],"names":["BarcodeScanner","forwardRef","ref","setLastResult","t","useTranslation","dispatch","useDispatch","activeItem","useSelector","selectActiveProduct","videoRef","useRef","selectRef","useState","devices","setDevices","selectedDeviceId","setSelectedDeviceId","result","setResult","activeScanner","setActiveScanner","codeReader","BrowserMultiFormatReader","useEffect","reader","current","navigator","mediaDevices","getUserMedia","video","then","listVideoInputDevices","videoInputDevices","length","deviceId","catch","err","console","error","reset","useImperativeHandle","startScan","stopScan","decodeFromVideoDevice","text","getProductByBarcode","article","className","css","onClick","htmlFor","id","value","onChange","e","target","map","device","label","PopUp","isOpen","close","body","onRequestClose","style","overlay","backgroundColor","position","top","left","right","bottom","display","justifyContent","alignItems","content","minWidth","maxWidth","width","maxHeight","padding","borderRadius","border","transition","ariaHideApp","type","href","svgIcons","InventoryCheckList","user","selectUser","isLoading","selectLoading","allChecks","selectAllInventoryChecks","scannerRef","addMode","setAddMode","selectMode","setSelectMode","selected","setSelected","isModalOpen","setIsModalOpen","lastResult","count","setCount","addItemsList","setAddItemsList","setArticle","addArticleModal","setAddArticleModal","changeMode","mode","combine","axios","array","getAllInventoryChecks","closeModal","addItemToList","prevState","clearActiveProduct","listDate","now","Date","today","getDate","month","getMonth","year","getFullYear","baseName","suffix","finalName","existingNames","check","name","includes","calculatePcs","arr","i","item","Number","AddCircleOutline","fill","fontSize","role","CheckCircleOutline","ClockLoader","color","index","_id","prev","filter","selectItem","items","to","HighlightOff","addInventoryCheck","toast","Array","isArray","images","alt","src","UA","price","UAH","placeholder","defaultValue","InventoryCheck","state","inventory","selectAllProducts","products","cssUnit","cm","mm","in","px","pt","pc","em","ex","ch","rem","vw","vh","vmin","vmax","parseLengthAndUnit","size","unit","valueString","match","toString","parseFloat","parseInt","warn","concat","__assign","Object","assign","s","n","arguments","p","prototype","hasOwnProperty","call","apply","this","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","rotate","loaderName","frames","animationName","window","document","styleEl","createElement","head","appendChild","styleSheet","sheet","keyFrames","insertRule","createAnimation","_a","_b","loading","_c","_d","speedMultiplier","_e","cssOverride","_f","additionalprops","_g","wrapper","height","boxShadow","minute","transformOrigin","animation","hour","React","createSvgIcon","_jsx","d"],"sourceRoot":""}