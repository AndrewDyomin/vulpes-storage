{"version":3,"file":"static/js/938.0a190720.chunk.js","mappings":"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","sources":["webpack://vulpes-storage/./src/components/PopUp/PopUp.module.css?1d5e","components/PopUp/PopUp.js","webpack://vulpes-storage/./src/components/InventoryCheckList/InventoryCheckList.module.css?ef9c","../node_modules/react-spinners/esm/helpers/unitConverter.js","../node_modules/react-spinners/esm/helpers/animation.js","../node_modules/react-spinners/esm/ClockLoader.js","../node_modules/@mui/icons-material/esm/AddCircleOutline.js","../node_modules/@mui/icons-material/esm/HighlightOff.js","webpack://vulpes-storage/./src/components/BarcodeScanner/BarcodeScanner.module.css?8344","components/BarcodeScanner/BarcodeScanner.js","redux/inventory/selectors.js","components/InventoryCheckList/InventoryCheckList.js","pages/InventoryCheck.js","redux/products/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalCloseButton\":\"PopUp_modalCloseButton__m06-1\",\"menuIcon\":\"PopUp_menuIcon__5-11v\"};","import svgIcons from '../../images/icons.svg';\nimport Modal from 'react-modal';\nimport css from './PopUp.module.css';\n\nexport const PopUp = ({ isOpen, close, body }) => {\n\n    const customStyles = {\n        overlay: { \n            backgroundColor: 'rgba(9, 9, 9, 0.75)',\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        content: {\n            position: 'relative',\n            top: 'auto',\n            left: 'auto',\n            right: 'auto',\n            bottom: 'auto',\n            minWidth: '300px',\n            maxWidth: '80%',\n            width: 'auto',\n            maxHeight: '80%',\n            padding: '50px 20px',\n            borderRadius: '12px',\n            border: '2px solid black',\n            backgroundColor: 'FFF',\n            transition: 'top 0.3s ease-in-out',\n        },\n      };\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={close}\n            style={customStyles}\n            ariaHideApp={false}\n        >\n            <button className={css.modalCloseButton} type=\"button\" onClick={close}>\n                <svg className={css.menuIcon}>\n                    <use href={`${svgIcons}#icon-close-circle`}></use>\n                </svg>\n            </button>\n            {body}\n        </Modal>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"listWrapper\":\"InventoryCheckList_listWrapper__ZmVhv\",\"addButton\":\"InventoryCheckList_addButton__GF6NK\",\"modalArea\":\"InventoryCheckList_modalArea__P1CSU\",\"modalImage\":\"InventoryCheckList_modalImage__eAl2A\",\"button\":\"InventoryCheckList_button__apVqB\",\"countArea\":\"InventoryCheckList_countArea__B0ih7\",\"countInput\":\"InventoryCheckList_countInput__dfopf\",\"countAddBtn\":\"InventoryCheckList_countAddBtn__TlZrB\",\"addListArea\":\"InventoryCheckList_addListArea__p0QVr\",\"list\":\"InventoryCheckList_list__J6D9u\",\"listItem\":\"InventoryCheckList_listItem__UnQTL\",\"count\":\"InventoryCheckList_count__So13G\"};","var cssUnit = {\n    cm: true,\n    mm: true,\n    in: true,\n    px: true,\n    pt: true,\n    pc: true,\n    em: true,\n    ex: true,\n    ch: true,\n    rem: true,\n    vw: true,\n    vh: true,\n    vmin: true,\n    vmax: true,\n    \"%\": true,\n};\n/**\n * If size is a number, append px to the value as default unit.\n * If size is a string, validate against list of valid units.\n * If unit is valid, return size as is.\n * If unit is invalid, console warn issue, replace with px as the unit.\n *\n * @param {(number | string)} size\n * @return {LengthObject} LengthObject\n */\nexport function parseLengthAndUnit(size) {\n    if (typeof size === \"number\") {\n        return {\n            value: size,\n            unit: \"px\",\n        };\n    }\n    var value;\n    var valueString = (size.match(/^[0-9.]*/) || \"\").toString();\n    if (valueString.includes(\".\")) {\n        value = parseFloat(valueString);\n    }\n    else {\n        value = parseInt(valueString, 10);\n    }\n    var unit = (size.match(/[^0-9]*$/) || \"\").toString();\n    if (cssUnit[unit]) {\n        return {\n            value: value,\n            unit: unit,\n        };\n    }\n    console.warn(\"React Spinners: \".concat(size, \" is not a valid css value. Defaulting to \").concat(value, \"px.\"));\n    return {\n        value: value,\n        unit: \"px\",\n    };\n}\n/**\n * Take value as an input and return valid css value\n *\n * @param {(number | string)} value\n * @return {string} valid css value\n */\nexport function cssValue(value) {\n    var lengthWithunit = parseLengthAndUnit(value);\n    return \"\".concat(lengthWithunit.value).concat(lengthWithunit.unit);\n}\n","export var createAnimation = function (loaderName, frames, suffix) {\n    var animationName = \"react-spinners-\".concat(loaderName, \"-\").concat(suffix);\n    if (typeof window == \"undefined\" || !window.document) {\n        return animationName;\n    }\n    var styleEl = document.createElement(\"style\");\n    document.head.appendChild(styleEl);\n    var styleSheet = styleEl.sheet;\n    var keyFrames = \"\\n    @keyframes \".concat(animationName, \" {\\n      \").concat(frames, \"\\n    }\\n  \");\n    if (styleSheet) {\n        styleSheet.insertRule(keyFrames, 0);\n    }\n    return animationName;\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { parseLengthAndUnit } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar rotate = createAnimation(\"ClockLoader\", \"100% { transform: rotate(360deg) }\", \"rotate\");\nfunction ClockLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 50 : _f, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\"]);\n    var _g = parseLengthAndUnit(size), value = _g.value, unit = _g.unit;\n    var wrapper = __assign({ display: \"inherit\", position: \"relative\", width: \"\".concat(value).concat(unit), height: \"\".concat(value).concat(unit), backgroundColor: \"transparent\", boxShadow: \"inset 0px 0px 0px 2px \".concat(color), borderRadius: \"50%\" }, cssOverride);\n    var minute = {\n        position: \"absolute\",\n        backgroundColor: color,\n        width: \"\".concat(value / 3, \"px\"),\n        height: \"2px\",\n        top: \"\".concat(value / 2 - 1, \"px\"),\n        left: \"\".concat(value / 2 - 1, \"px\"),\n        transformOrigin: \"1px 1px\",\n        animation: \"\".concat(rotate, \" \").concat(8 / speedMultiplier, \"s linear infinite\"),\n    };\n    var hour = {\n        position: \"absolute\",\n        backgroundColor: color,\n        width: \"\".concat(value / 2.4, \"px\"),\n        height: \"2px\",\n        top: \"\".concat(value / 2 - 1, \"px\"),\n        left: \"\".concat(value / 2 - 1, \"px\"),\n        transformOrigin: \"1px 1px\",\n        animation: \"\".concat(rotate, \" \").concat(2 / speedMultiplier, \"s linear infinite\"),\n    };\n    if (!loading) {\n        return null;\n    }\n    return (React.createElement(\"span\", __assign({ style: wrapper }, additionalprops),\n        React.createElement(\"span\", { style: hour }),\n        React.createElement(\"span\", { style: minute })));\n}\nexport default ClockLoader;\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8\"\n}), 'AddCircleOutline');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M14.59 8 12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8\"\n}), 'HighlightOff');","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"BarcodeScanner_container__zdOxt\",\"videoArea\":\"BarcodeScanner_videoArea__AA2r4\",\"hide\":\"BarcodeScanner_hide__qqbBN\",\"modalArea\":\"BarcodeScanner_modalArea__9PFQN\",\"modalImage\":\"BarcodeScanner_modalImage__0uUA6\",\"button\":\"BarcodeScanner_button__kNses\"};","import { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport css from './BarcodeScanner.module.css';\nimport { BrowserMultiFormatReader } from '@zxing/library';\nimport { getProductByBarcode } from '../../redux/products/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectActiveProduct } from '../../redux/products/selectors';\n\nexport const BarcodeScanner = forwardRef(({ setLastResult }, ref) => {\n  const dispatch = useDispatch();\n  const activeItem = useSelector(selectActiveProduct);\n  const videoRef = useRef(null);\n  const selectRef = useRef(null);\n  const [devices, setDevices] = useState([]);\n  const [selectedDeviceId, setSelectedDeviceId] = useState('');\n  const [result, setResult] = useState(null);\n  const [activeScanner, setActiveScanner] = useState(false);\n\n  const codeReader = useRef(new BrowserMultiFormatReader());\n\n  useEffect(() => {\n    const reader = codeReader.current;\n\n    navigator.mediaDevices\n      .getUserMedia({ video: true })\n      .then(() => {\n        return reader.listVideoInputDevices();\n      })\n      .then(videoInputDevices => {\n        setDevices(videoInputDevices);\n        if (videoInputDevices.length > 0) {\n          setSelectedDeviceId(videoInputDevices[0].deviceId);\n        }\n      })\n      .catch(err => {\n        console.error('Ошибка доступа к камере:', err);\n      });\n\n    return () => {\n      reader.reset();\n    };\n  }, []);\n\n  useImperativeHandle(ref, () => ({\n    startScan,\n    stopScan,\n  }));\n\n  const startScan = () => {\n    setActiveScanner(true);\n    if (!selectedDeviceId) return;\n\n    codeReader.current.decodeFromVideoDevice(\n      selectedDeviceId,\n      videoRef.current,\n      async (result, err) => {\n        if (result) {\n          try {\n\n            if (result?.text[0] !== 'H') {\n              setLastResult(result.text);\n              dispatch(getProductByBarcode(result.text));\n            }\n          } catch (error) {\n            console.error(error);\n            setResult({ error: 'Ошибка запроса к серверу' });\n          }\n        }\n      }\n    );\n  };\n\n  const stopScan = () => {\n    setActiveScanner(false);\n    codeReader.current.reset();\n    setResult(null);\n  };\n\n  useEffect(() => {\n    if (activeItem && activeItem.article) {\n      stopScan();\n    }\n    if (activeItem === null) {\n      stopScan();\n    }\n  }, [activeItem, result]);\n\n  return (\n    <div className={css.container}>\n      <div className={css.scanBlock}>\n        <video\n          ref={videoRef}\n          className={activeScanner ? css.videoArea : css.hide}\n        />\n      </div>\n\n      <div className={css.buttonsBlock}>\n        <button className={css.button} onClick={startScan}>\n          Start\n        </button>\n        <button className={css.button} onClick={stopScan}>\n          Reset\n        </button>\n      </div>\n\n      <div className={css.scanBlock}>\n        <label htmlFor=\"sourceSelect\">Change video source:</label>\n        <select\n          ref={selectRef}\n          id=\"sourceSelect\"\n          value={selectedDeviceId}\n          onChange={e => setSelectedDeviceId(e.target.value)}\n        >\n          {devices.map(device => (\n            <option key={device.deviceId} value={device.deviceId}>\n              {device.label || `Camera ${device.deviceId}`}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n})","export const selectAllInventoryChecks = state => state.inventory.items;\nexport const isInventoryChecksLoading = state => state.inventory.isLoading;","import css from './InventoryCheckList.module.css';\nimport { ClockLoader } from 'react-spinners';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport { useEffect, useState, useRef } from 'react';\nimport { BarcodeScanner } from '../BarcodeScanner/BarcodeScanner';\nimport { selectActiveProduct } from '../../redux/products/selectors';\nimport { selectAllInventoryChecks, isInventoryChecksLoading } from '../../redux/inventory/selectors';\nimport { clearActiveProduct } from '../../redux/products/slice';\nimport { addInventoryCheck, getAllInventoryChecks } from '../../redux/inventory/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PopUp } from '../PopUp/PopUp';\nimport toast from 'react-hot-toast';\n\nexport const InventoryCheckList = () => {\n  const dispatch = useDispatch();\n  const activeItem = useSelector(selectActiveProduct);\n  const isLoading = useSelector(isInventoryChecksLoading);\n  const allChecks = useSelector(selectAllInventoryChecks);\n  const scannerRef = useRef();\n  const [addMode, setAddMode] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [lastResult, setLastResult] = useState('');\n  const [count, setCount] = useState();\n  const [addItemsList, setAddItemsList] = useState([]);\n  const [article, setArticle] = useState()\n\n  const changeMode = () => {\n    addMode ? setAddMode(false) : setAddMode(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const addItemToList = () => {\n    setAddItemsList(prevState => [...prevState, {article: !article ? activeItem.article : article, count}])\n    setIsModalOpen(false);\n    setArticle();\n    setCount();\n    dispatch(clearActiveProduct());\n    scannerRef.current?.startScan()\n  }\n\n  const listDate = () => {\n    const now = new Date();\n    const today = now.getDate() < 10 ? '0' + now.getDate() : now.getDate();\n    const month = now.getMonth() < 9 ? '0' + (now.getMonth() + 1) : now.getMonth() + 1;\n    const year = now.getFullYear();\n\n    return (`${today}.${month}.${year}`)\n  }\n\n  const saveList = () => {\n    const check = {name: listDate(), items: addItemsList}\n    try {\n       dispatch(addInventoryCheck(check));\n       setAddMode(false);\n       setAddItemsList([])\n    } catch(err) {\n        toast.error(err)\n    }\n  }\n\n  const calculatePcs = (arr) => {\n    let i = 0\n    for (const item of arr) {\n        i += Number(item.count)\n    }\n    return i;\n  }\n\n  useEffect(() => {\n    if (lastResult === '') return;\n\n    if (activeItem && activeItem.article) {\n      setIsModalOpen(true);\n    }\n    if (activeItem === null) {\n      setIsModalOpen(true);\n    }\n  }, [activeItem, lastResult]);\n\n  useEffect(() => {\n    if (!addMode) {\n        dispatch(getAllInventoryChecks())\n    }\n  }, [addMode, dispatch])\n\n  return (\n    <>\n      {!addMode && (\n        <>\n          <button className={css.addButton} onClick={changeMode}>\n            <AddCircleOutlineIcon fill=\"transparent\" fontSize=\"large\" />\n          </button>\n          <div className={css.listWrapper}>\n            {isLoading && <ClockLoader color=\"#c04545\" />}\n            {(!isLoading && allChecks) && (\n                <ul className={css.list}>\n                    {allChecks.map((check, index) => (\n                        <li key={index} className={css.listItem}>\n                            <p>{check.name}</p>\n                            <p className={css.count}>{calculatePcs(check.items)}шт.</p>\n                        </li>\n                    ))}\n                </ul>\n            )}\n          </div>\n        </>\n      )}\n      {addMode && (\n        <>\n          <button\n            className={`${css.addButton} ${css.closeButton}`}\n            onClick={changeMode}\n          >\n            <HighlightOffIcon fill=\"transparent\" fontSize=\"large\" />\n          </button>\n          <div>\n            <BarcodeScanner setLastResult={setLastResult} ref={scannerRef}/>\n          </div>\n          {(activeItem && activeItem.article) && (<button className={css.button} onClick={() => setIsModalOpen(true)}>Last Scan</button>)}\n          {addItemsList?.length > 0 && (\n            <div className={css.addListArea}>\n                <p>{listDate()}</p>\n                <ul className={css.list}>\n                    {addItemsList.map((item, index) => (\n                        <li key={index} className={css.listItem}>\n                            <p>Артикул: {item.article}</p>\n                            <p className={css.count}>Кол-во: {item.count}шт.</p>\n                        </li>\n                    ))}\n                </ul>\n                <button className={css.button} onClick={saveList}>Apply</button>\n            </div>\n          )}\n          <PopUp\n            isOpen={isModalOpen}\n            close={closeModal}\n            body={\n              activeItem && activeItem.article ? (\n                <div className={css.modalArea}>\n                  {Array.isArray(activeItem.images) &&\n                  activeItem.images.length > 0 ? (\n                    <img\n                      className={css.modalImage}\n                      alt=\"scanned product\"\n                      src={activeItem.images[0]}\n                    />\n                  ) : (\n                    <p>No image</p>\n                  )}\n                  <p>{`${activeItem.name?.UA || 'Без названия'} (${\n                    activeItem.article\n                  })`}</p>\n                  <p>\n                    {activeItem.price?.UAH\n                      ? `${activeItem.price.UAH} грн.`\n                      : 'Цена не указана'}\n                  </p>\n                  <div className={css.countArea}>\n                    <input\n                        placeholder='Сколько штук?' \n                        onChange={e => setCount(e.target.value)}\n                        defaultValue={count}\n                        className={css.countInput}\n                    />\n                    <button className={css.countAddBtn} onClick={addItemToList}>Add</button>\n                  </div>\n                </div>\n              ) : activeItem === null ? (\n                <div>\n                  <p>Товар не найден!</p>\n                  <p>Штрихкод: {lastResult}</p>\n                  <div className={css.countArea}>\n                    <input\n                        placeholder='Артикул' \n                        onChange={e => setArticle(e.target.value)}\n                        defaultValue={article}\n                        className={css.countInput}\n                    />\n                    <input\n                        placeholder='Сколько штук?' \n                        onChange={e => setCount(e.target.value)}\n                        defaultValue={count}\n                        className={css.countInput}\n                    />\n                    <button className={css.countAddBtn} onClick={addItemToList}>Add</button>\n                  </div>\n                </div>\n              ) : null\n            }\n          />\n        </>\n      )}\n    </>\n  );\n};\n","import { InventoryCheckList } from '../components/InventoryCheckList/InventoryCheckList';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n// import { useSelector } from 'react-redux';\n// import { selectUser } from '../redux/auth/selectors';\n\n  \n  export default function InventoryCheck() {\n\n    // const user = useSelector(selectUser);\n\n    return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Inventory check</title>\n        </Helmet>\n        <InventoryCheckList />\n      </div>\n    </HelmetProvider>\n    );\n  }","export const selectAllProducts = state => state.products.items;\nexport const selectActiveProduct = state => state.products.activeItem;"],"names":["PopUp","isOpen","close","body","onRequestClose","style","overlay","backgroundColor","position","top","left","right","bottom","display","justifyContent","alignItems","content","minWidth","maxWidth","width","maxHeight","padding","borderRadius","border","transition","ariaHideApp","className","css","type","onClick","href","svgIcons","cssUnit","cm","mm","in","px","pt","pc","em","ex","ch","rem","vw","vh","vmin","vmax","parseLengthAndUnit","size","value","unit","valueString","match","toString","includes","parseFloat","parseInt","console","warn","concat","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","rotate","loaderName","frames","suffix","animationName","window","document","styleEl","createElement","head","appendChild","styleSheet","sheet","keyFrames","insertRule","createAnimation","_a","_b","loading","_c","color","_d","speedMultiplier","_e","cssOverride","_f","additionalprops","_g","wrapper","height","boxShadow","minute","transformOrigin","animation","hour","React","createSvgIcon","_jsx","d","BarcodeScanner","forwardRef","ref","setLastResult","dispatch","useDispatch","activeItem","useSelector","selectActiveProduct","videoRef","useRef","selectRef","useState","devices","setDevices","selectedDeviceId","setSelectedDeviceId","result","setResult","activeScanner","setActiveScanner","codeReader","BrowserMultiFormatReader","useEffect","reader","current","navigator","mediaDevices","getUserMedia","video","then","listVideoInputDevices","videoInputDevices","deviceId","catch","err","error","reset","useImperativeHandle","startScan","stopScan","decodeFromVideoDevice","text","getProductByBarcode","article","htmlFor","id","onChange","target","map","device","label","selectAllInventoryChecks","state","inventory","items","isInventoryChecksLoading","isLoading","InventoryCheckList","allChecks","scannerRef","addMode","setAddMode","isModalOpen","setIsModalOpen","lastResult","count","setCount","addItemsList","setAddItemsList","setArticle","changeMode","addItemToList","prevState","clearActiveProduct","listDate","now","Date","today","getDate","month","getMonth","year","getFullYear","calculatePcs","arr","item","Number","getAllInventoryChecks","AddCircleOutline","fill","fontSize","check","index","name","HighlightOff","addInventoryCheck","toast","Array","isArray","images","alt","src","UA","price","UAH","placeholder","defaultValue","InventoryCheck","selectAllProducts","products"],"sourceRoot":""}